name: Node.js CI & GitHub Pages Deploy

on:
  push:
    branches: ["main"]  # 推送到 main 分支触发部署
  pull_request:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 赋予写入权限以推送至 gh-pages 分支
    strategy:
      matrix:
        node-version: ["22.x"]  # 使用 Node.js 22.x（LTS 版本，稳定可靠）
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # 检出代码到运行环境

      - name: Set up pnpm
        uses: pnpm/action-setup@v4.1.0
        with:
          version: 10  # 指定 pnpm 版本（与项目兼容）

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: pnpm install  # 使用 pnpm 安装项目依赖

      - name: Build project
        run: pnpm run build  # 执行项目构建命令（确保输出目录与下方 publish_dir 一致）

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4  # 使用 peaceiris 方案部署
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}  # GitHub 自动生成的令牌，无需手动创建
          publish_dir: ./dist                       # 构建输出目录（根据项目实际输出修改，如 build/out 等）
          publish_branch: gh-pages                  # GitHub Pages 部署目标分支（默认值，显式声明更清晰）
          # user_name: "github-actions[bot]"           # 提交时的用户名（默认值，可选）
          # user_email: "github-actions[bot]@users.noreply.github.com"  # 提交时的邮箱（默认值，可选）
          commit_message: "Deploy from main branch: ${{ github.sha }}"  # 提交信息（包含当前 commit SHA，方便追溯）
